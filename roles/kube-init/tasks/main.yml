---
# Alright we're using the kubeadm init
# You can reset this with:
#  [root@kube-master centos]# kubeadm --help | grep reset
#    reset       Run this to revert any changes made to this host by 'kubeadm init' or 'kubeadm join'.


- name: Default cri-o flags to empty
  set_fact:
    arg_crio: ""

- name: Set cri-o flags
  set_fact:
    arg_crio: "--ignore-preflight-errors=all"
  when: container_runtime == "crio"

- name: Default k8s version to empty
  set_fact:
    k8s_version: ""

- name: Run kubeadm init
  #when: reset_cluster is succeeded
  shell: > 
    sudo  kubeadm init --apiserver-advertise-address={{ apiserver_advertise_address }} --pod-network-cidr={{ pod_network_cidr }}/16
  become: true
  become_user: "{{ docker_user }}"
  register: init_cluster
  args:
    creates: /etc/.kubeadm-complete

- name: Mark init complete
  when: init_cluster is succeeded
  file:
    path: /etc/.kubeadm-complete
    state: directory

# -------- Copy in admin.conf

# ---- Kube 1.6, apparently you can't use kubectl as root? weird/awesome.

  # sudo cp /etc/kubernetes/admin.conf $HOME/
  # sudo chown $(id -u):$(id -g) $HOME/admin.conf
  # export KUBECONFIG=$HOME/admin.conf

- name: Ensure .kube folder exists
  when: init_cluster is succeeded
  file:
    path: "{{ kubectl_home }}/.kube/"
    state: directory
    owner: "{{ kubectl_user }}"
    group: "{{ kubectl_group }}"
    mode: 0755

- name: Copy admin.conf to kubectl user's home
  when: init_cluster is succeeded
  shell: >
    cp -f /etc/kubernetes/admin.conf {{ kubectl_home }}/.kube/admin.conf
  args:
    creates: "{{ kubectl_home }}/admin.conf"

- name: Set admin.conf ownership
  when: init_cluster is succeeded
  file:
    path: "{{ kubectl_home }}/.kube/admin.conf"
    owner: "{{ kubectl_user }}"
    group: "{{ kubectl_group }}"

- name: Create flannel network
  shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
  become: true
  become_user: "{{ docker_user }}"



- name: Get join command
  shell: >
    kubeadm token create --print-join-command
  register: kubeadm_join_output

- name: Set fact with join command
  set_fact:
    kubeadm_join_command: "{{ kubeadm_join_output.stdout }}"



- name: Add KUBECONFIG env for admin.conf to .bashrc
  lineinfile:
    dest: "{{ kubectl_home }}/.bashrc"
    regexp: "KUBECONFIG"
    line: "export KUBECONFIG={{ kubectl_home }}/.kube/admin.conf"
